const nodeVersionConfig = {
  version: ">=18.0.0",
};
module.exports = {
  root: true,
  parser: "@babel/eslint-parser",
  plugins: ["import", "jest", "node", "regexp", "sonarjs", "unicorn", "unused-imports"],
  extends: ["eslint:recommended", "plugin:security/recommended"],
  settings: {
    node: {
      allowModules: [],
    },
  },
  env: {
    es6: true,
    node: true,
    browser: true,
    amd: true,
    "jest/globals": true,
  },
  parserOptions: {
    ecmaVersion: 8,
    sourceType: "module",
  },
  ignorePatterns: ["dist/**"],
  rules: {
    "prettier/prettier": "off",

    "import/no-cycle": "warn",
    "import/no-unused-modules": "error",
    "import/no-useless-path-segments": "error",
    "import/order": "off",

    "jsx-quotes": ["error", "prefer-double"],
    "lines-between-class-members": "error",
    "max-depth": ["error", 6],
    "max-nested-callbacks": ["error", 6],
    "max-params": ["error", 7],
    "no-case-declarations": "error",
    "no-constant-condition": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-imports": ["error", { includeExports: true }],
    "no-empty-pattern": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-semi": "error",
    "no-self-compare": "error",
    "no-template-curly-in-string": "error",
    "no-unneeded-ternary": "error",
    "no-unreachable": "error",
    "no-unsafe-negation": "error",
    "no-unsafe-optional-chaining": "error",
    "no-unused-expressions": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "object-shorthand": "error",
    "prefer-const": "error",
    "prefer-destructuring": ["error", { VariableDeclarator: { array: false, object: true } }],
    "prefer-template": "error",
    "quote-props": ["error", "as-needed"],
    eqeqeq: "error",
    yoda: "error",

    "sonarjs/cognitive-complexity": ["error", 40],
    "sonarjs/no-all-duplicated-branches": "error",
    "sonarjs/no-duplicate-string": "off",
    "sonarjs/no-duplicated-branches": "error",
    "sonarjs/no-empty-collection": "error",
    "sonarjs/no-gratuitous-expressions": "error",
    "sonarjs/no-identical-conditions": "error",
    "sonarjs/no-identical-expressions": "error",
    "sonarjs/no-identical-functions": "off",
    "sonarjs/no-ignored-return": "error",
    "sonarjs/no-inverted-boolean-check": "error",
    "sonarjs/no-nested-switch": "error",
    "sonarjs/no-nested-template-literals": "error",
    "sonarjs/no-redundant-boolean": "error",
    "sonarjs/no-redundant-jump": "error",
    "sonarjs/no-same-line-conditional": "error",
    "sonarjs/no-unused-collection": "error",
    "sonarjs/no-useless-catch": "error",
    "sonarjs/non-existent-operator": "error",
    "sonarjs/prefer-object-literal": "error",
    "sonarjs/prefer-single-boolean-return": "error",
    "sonarjs/prefer-while": "error",

    "no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "error",
      {
        vars: "all",
        varsIgnorePattern: "_",
        args: "after-used",
        argsIgnorePattern: "_",
      },
    ],

    "security/detect-object-injection": "off",

    "unicorn/catch-error-name": [
      "off",
      {
        ignore: ["^error\\d*$"],
      },
    ],
    "unicorn/consistent-destructuring": "error",
    "unicorn/consistent-function-scoping": "error",
    "unicorn/custom-error-definition": "error",
    "unicorn/explicit-length-check": "error",
    "unicorn/new-for-builtins": "off",
    "unicorn/no-array-for-each": "error",
    "unicorn/no-array-push-push": "error",
    "unicorn/no-await-expression-member": "off",
    "unicorn/no-for-loop": "error",
    "unicorn/no-instanceof-array": "error",
    "unicorn/no-nested-ternary": "error",
    "unicorn/no-useless-fallback-in-spread": "error",
    "unicorn/no-useless-length-check": "off",
    "unicorn/no-useless-spread": "error",
    "unicorn/no-useless-undefined": "error",
    "unicorn/prefer-array-find": "error",
    "unicorn/prefer-array-flat": "error",
    "unicorn/prefer-export-from": "error",
    "unicorn/prefer-native-coercion-functions": "off",
    "unicorn/prefer-number-properties": "error",
    "unicorn/prefer-object-from-entries": "error",
    "unicorn/prefer-type-error": "ERROR",
    "unicorn/string-content": "off",
    "unicorn/template-indent": [
      "error",
      {
        comments: ["HTML", "indent"],
        functions: ["dedent", "stripIndent"],
        selectors: [],
        tags: ["outdent", "dedent", "gql", "sql", "html", "styled"],
      },
    ],
    "unicorn/throw-new-error": "error",

    "regexp/confusing-quantifier": "error",
    "regexp/negation": "error",
    "regexp/no-dupe-characters-character-class": "error",
    "regexp/no-empty-group": "error",
    "regexp/no-invisible-character": "error",
    "regexp/no-obscure-range": "error",
    "regexp/no-super-linear-backtracking": "error",
    "regexp/no-trivially-nested-assertion": "error",
    "regexp/no-trivially-nested-quantifier": "error",
    "regexp/no-useless-character-class": "error",
    "regexp/no-useless-flag": "error",
    "regexp/no-useless-range": "error",
    "regexp/no-useless-two-nums-quantifier": "error",
    "regexp/no-zero-quantifier": "error",
    "regexp/optimal-quantifier-concatenation": "error",
    "regexp/prefer-quantifier": "error",
    "regexp/prefer-range": "error",
    "regexp/sort-alternatives": "error",

    "node/no-deprecated-api": ["error", nodeVersionConfig],
    "node/no-exports-assign": "error",
    "node/no-extraneous-import": "error",
    "node/no-extraneous-require": "error",
    "node/no-unsupported-features/es-builtins": ["error", nodeVersionConfig],
    "node/no-unsupported-features/es-syntax": ["error", { version: ">=16.0.0", ignores: ["modules", "dynamicImport"] }],
    "node/no-unsupported-features/node-builtins": "error",
    "node/process-exit-as-throw": "error",
    "node/shebang": "error",
  },
  overrides: [
    {
      files: ["*.spec.js", "*.spec.ts", "*.spec.tsx", "*.test.js", "*.test.ts", "*.test.tsx"],
      rules: {
        "jest/consistent-test-it": "error",
        "jest/no-deprecated-functions": "error",
        "jest/no-jasmine-globals": "error",
        "jest/no-test-prefixes": "error",
        "jest/prefer-comparison-matcher": "error",
        "jest/prefer-equality-matcher": "error",
        "jest/prefer-to-be": "error",
        "jest/prefer-to-contain": "error",
        "jest/prefer-to-have-length": "error",
      },
    },
  ],
};
